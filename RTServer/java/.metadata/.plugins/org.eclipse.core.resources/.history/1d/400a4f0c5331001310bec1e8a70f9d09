package com.bsh.test;

import java.net.*;
import java.util.*;
import java.io.*;
import java.nio.*;
import java.nio.channels.*;
import java.nio.charset.*;

public class NIOSocketClient{
	public static void main(String[] args) throws IOException{
		InetSocketAddress ip = new InetSocketAddress("211.88.253.7", 5566);
		//打开Socket通道   
        SocketChannel sc = SocketChannel.open();
		//打开选择器
		Selector sel = Selector.open();
		try {
	        //设置为非阻塞模式
			sc.configureBlocking(false);
			sc.socket.bind(new InetSocketAddress(CLIENT_PORT));
			//注册连接服务端socket动作
			sc.register(sel, SelectionKey.OP_READ | SelectionKey.OP_WRITE | SelectionKey.OP_CONNECT);
			//连接   
			sc.connect(ip);
			int i = 0;
			boolean written = false;
			boolean done = false;
			//String encoding = System.getProperty("file.encoding");
			Charset cs = Charset.forName("UTF8");
			ByteBuffer buf = ByteBuffer.allocate(16);
			while (!done) {
				sel.select();
				Iterator<SelectionKey> it = sel.selectedKeys().iterator();
				while (it.hasNext()) {
					SelectionKey key = (SelectionKey)it.next();
					it.remove();
					//获取创建通道选择器事件键的套接字通道
					sc = (SocketChannel)key.channel();
					//当前通道选择器产生连接已经准备就绪事件，并且客户端套接字
					//通道尚未连接到服务端套接字通道
					if (key.isConnectable() && !sc.isConnected()) {
						//客户端套接字通道向服务端套接字通道发起非阻塞连接
						boolean success = sc.connect(new InetSocketAddress("211.88.253.7", 5566));
						//如果客户端没有立即连接到服务端，则客户端完成非立即连接操作
						if (!success) sc.finishConnect();
					}
					//如果通道选择器产生读取操作已准备好事件，且已经向通道写入数据
					if (key.isReadable() && written) {
						if (sc.read((ByteBuffer)buf.clear()) > 0) {
							written = false;
							//从套接字通道中读取数据
							String response = cs.decode((ByteBuffer)buf.flip()).toString();
							System.out.println(response);
							if (response.indexOf("END") != -1) done = true;
						}
					}
					//如果通道选择器产生写入操作已准备好事件，并且尚未想通道写入数据
					if (key.isWritable() && !written) {
						//向套接字通道中写入数据
						if (i < 10) sc.write(ByteBuffer.wrap(new String("howdy " + i + '\n').getBytes()));
						else if(i == 10) sc.write(ByteBuffer.wrap(new String("END").getBytes()));
						written = true;
						i++;
					}
				}
			}
		} finally {
			sc.close();
			sel.close();
		}
	}
}